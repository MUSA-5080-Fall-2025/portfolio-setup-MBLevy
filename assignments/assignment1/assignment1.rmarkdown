---
title: "Assignment 1: Census Data Quality for Policy Decisions"
subtitle: "Evaluating Data Reliability for Algorithmic Decision-Making"
author: "Matthew Levy"
date: today
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
execute:
  warning: false
  message: false
---

# Assignment Overview

## Scenario

You are a data analyst for the **Pennsylvania Department of Human Services**. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.

Drawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.

## Learning Objectives

- Apply dplyr functions to real census data for policy analysis
- Evaluate data quality using margins of error 
- Connect technical analysis to algorithmic decision-making
- Identify potential equity implications of data reliability issues
- Create professional documentation for policy stakeholders

## Submission Instructions

**Submit by posting your updated portfolio link on Canvas.** Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/`

Make sure to update your `_quarto.yml` navigation to include this assignment under an "Assignments" menu.

# Part 1: Portfolio Integration

Create this assignment in your portfolio repository under an `assignments/assignment_1/` folder structure. Update your navigation menu to include:

```
- text: Assignments
  menu:
    - href: assignments/assignment_1/your_file_name.qmd
      text: "Assignment 1: Census Data Exploration"
```
If there is a special character like comma, you need use double quote mark so that the quarto can identify this as text

# Setup

```{r setup}
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)
library(knitr)
library(tidyverse)
library(tidycensus)
# Set your Census API key
census_api_key("f6ac8f4f33d6431a4a6a8713369bc824e47dc1e4")
# Choose your state for analysis - assign it to a variable called my_state
```

**State Selection:** I have chosen **Pennsylvania** for this analysis because: I want to get more familiar with the state in which I now live.


# Part 2: County-Level Resource Assessment

## 2.1 Data Retrieval

**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.

**Requirements:**
- Geography: county level
- Variables: median household income (B19013_001) and total population (B01003_001)  
- Year: 2022
- Survey: acs5
- Output format: wide

**Hint:** Remember to give your variables descriptive names using the `variables = c(name = "code")` syntax.

```{r county-data}
# Write your get_acs() code here

dataPA <- get_acs(geography = "county", 
                  variables = c(popTotal = "B01003_001",
                                medIncome = "B19013_001"),
                  year = 2022, state = "PA",
                  survey = "acs5", output = "wide")
dataPA
# Clean the county names to remove state name and "County" 
# Hint: use mutate() with str_remove()
dataPA <- dataPA %>% 
  mutate(
    countyName = str_remove(NAME, " County, Pennsylvania")
    ) 
# Display the first few rows
head(dataPA)
```

## 2.2 Data Quality Assessment

**Your Task:** Calculate margin of error percentages and create reliability categories.

**Requirements:**
- Calculate MOE percentage: (margin of error / estimate) * 100
- Create reliability categories:
  - High Confidence: MOE < 5%
  - Moderate Confidence: MOE 5-10%  
  - Low Confidence: MOE > 10%
- Create a flag for unreliable estimates (MOE > 10%)

**Hint:** Use `mutate()` with `case_when()` for the categories.

```{r income-reliability}
# Calculate MOE percentage and reliability categories using mutate()
dataPA <- dataPA %>%
  mutate(moePercentage = (medIncomeM/medIncomeE)*100)

dataPA <- dataPA %>%
  mutate(reliability = case_when(
    moePercentage < 5 ~ "High Confidence",
    moePercentage >= 5 & moePercentage <= 10 ~ "Moderate Confidence",
    moePercentage > 10 ~ "Low Confidence"))
# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages
count(dataPA, reliability)

#Summary by reliability category
sumReliability <- dataPA %>% group_by(reliability) %>%
  summarize(
    counties = n(),
    avgIncome = round(mean(medIncomeE,
                           na.rm = TRUE), 0)
  )
sumReliability

#Flag for unreliability
dataPA <- dataPA %>% mutate(unreliableIncome = case_when(
  moePercentage < 10 ~ FALSE,
  moePercentage >= 10 ~ TRUE))
dataPA
```

## 2.3 High Uncertainty Counties

**Your Task:** Identify the 5 counties with the highest MOE percentages.

**Requirements:**
- Sort by MOE percentage (highest first)
- Select the top 5 counties
- Display: county name, median income, margin of error, MOE percentage, reliability category
- Format as a professional table using `kable()`

**Hint:** Use `arrange()`, `slice()`, and `select()` functions.

```{r high-uncertainty}
# Create table of top 5 counties by MOE percentage

# Format as table with kable() - include appropriate column names and caption

?kable
#Creating a kable table to show unreliability
#First must create table ordered by MoE
highUncertainty <- dataPA %>% 
  arrange(desc(moePercentage)) %>%
  select(countyName,popTotalE, medIncomeE, moePercentage)
#only highst MoE
kable(highUncertainty[1:5,],
      col.names =  c("County", "County Population", "Median Income", 
                     "Income MoE %"),
      caption = "PA Counties with the Highest Income Data Uncertainty",
      format.args = list(big.mark = ","))
```

**Data Quality Commentary:**

[Write 2-3 sentences explaining what these results mean for algorithmic decision-making. Consider: Which counties might be poorly served by algorithms that rely on this income data? What factors might contribute to higher uncertainty?]

Looking at the counties that ranked the most unreliable in Pennsylvania (Cameron, Sullivan, Montour, Forest, and Union), it becomes immediately apparent that the list is made up of low population counties (including 4 of the top 6 and *all of the top 3*). With this information, I would assume less-populated more-rural counties would not be served well by an algorithm relying on this income data, as these counties' small populations most likely mean that the ACS is gathering their sample from a nearly-irredeemably small number of people.


# Part 3: Neighborhood-Level Analysis

## 3.1 Focus Area Selection

**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.

**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.

```{r select-counties}
# Use filter() to select 2-3 counties from your county_reliability data
# Store the selected counties in a variable called selected_counties

#no low confidence in PA

#Green is favorite color
compTibble <- filter(dataPA, GEOID == 42059)
#7 is my fav number
compTibble <- add_row(compTibble, filter(dataPA, reliability == "High Confidence")[7, ])

# Display the selected counties with their key characteristics
# Show: county name, median income, MOE percentage, reliability category
kable(compTibble[, c(7, 5, 8,9)],
      col.names = c("County", "Median Income", "MoE %",
                    "Reliability Category"),
      caption = "A comparison of Income MoE Categories in Pennsylavia",
      format.args = list(big.mark = ","))
```

**Comment on the output:** [write something :)]
As someone with little knowledge of Pennsylvania outside of Philadelphia, it is hard for me to be too confidence in my observations. However, I noticed once again margin of error seemed to be highly related with population, as Blair county (which has a MoE % of 2.94%) is nearly four times more populated than Greene county (MoE % of 6.31%).

## 3.2 Tract-Level Demographics

**Your Task:** Get demographic data for census tracts in your selected counties.

**Requirements:**
- Geography: tract level
- Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)
- Use the same state and year as before
- Output format: wide
- **Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.

```{r tract-demographics}
# Define your race/ethnicity variables with descriptive names


vars <- c("B03002_003", "B03002_004", "B03002_012", "B03002_001")
# Use get_acs() to retrieve tract-level data
# Hint: You may need to specify county codes in the county parameter

#Changed to philadelphia for later analysis to be possible (Blair andn Greene were both 100% low confidence)
#GEOIDs didn't work?

demos <- get_acs(
  geography = "tract",
  variables = vars,
  state = "PA",
  county = c("Philadelphia", "Greene"),
  year = 2022,
  survey = "acs5",
  output = "wide"
)
#Renaming
demos <- demos %>% rename(whiteE = B03002_003E, whiteM = B03002_003M, 
                          aaE = B03002_004E, aaM = B03002_004M,hispE = B03002_012E,
                          hispM = B03002_012M, totalE = B03002_001E, totalM = B03002_001M)


# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations
demos <- demos %>% mutate(whitePerc = 100*(whiteE/totalE),
                          aaPerc = 100*(aaE/totalE), hispPerc = 100*(hispE/totalE))
# Add readable tract and county name columns using str_extract() or similar
?str_extract

#Get Census track name and county name through regex
demos <- demos %>% mutate(
  tractName = str_extract(
    NAME, "^Census Tract \\d+(.\\d+)?"), countyName = substring(str_extract(NAME, ";\\s[A-z]+"),
       3))


```

## 3.3 Demographic Analysis

**Your Task:** Analyze the demographic patterns in your selected areas.

```{r demographic-analysis}
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract
?arrange
?slice

highestHispLat <-demos %>% arrange(desc(hispPerc)) %>% slice(1) %>% select(countyName, tractName)
print(highestHispLat)

# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group
sumDemos <- demos %>% group_by(countyName) %>% summarise(
  avgWhitePerc = mean(whitePerc, na.rm = TRUE), avgAAPerc = mean(aaPerc, na.rm = TRUE),
  avgHispLatPerc = mean(hispPerc, na.rm = TRUE)
)
?summarise

# Create a nicely formatted table of your results using kable()
kable(sumDemos,
      col.names = c("County",
                    "Average CT % White Residents",
                    "Average CT % Black Residents",
                    "Average CT % Hispanic/Latine Residents"),
      caption = "A comparison of Average Census Track Demographics in Greene and Philadelphia County, Pennsylvania",
      format.args = list(big.mark = ","))
```

# Part 4: Comprehensive Data Quality Evaluation

## 4.1 MOE Analysis for Demographic Variables

**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.

**Requirements:**
- Calculate MOE percentages for each demographic variable
- Flag tracts where any demographic variable has MOE > 15%
- Create summary statistics

```{r demographic-moe}
# Calculate MOE percentages for white, Black, and Hispanic variables
# Hint: use the same formula as before (margin/estimate * 100)
demos <- demos %>% mutate(
  whiteMoEPerc = 100*(whiteM/whiteE),
  aaMoEPerc = 100*(aaM/aaE),
  hispLatMoEPerc = 100*(hispM/hispE)
)
# Create a flag for tracts with high MOE on any demographic variable
# Use logical operators (| for OR) in an ifelse() statement
demos <- demos %>% mutate(
  demoUnreliable = if_else(whiteMoEPerc > 15 | aaMoEPerc > 15 | hispLatMoEPerc > 15,
                     TRUE, FALSE)
)
# Create summary statistics showing how many tracts have data quality issues

dataIssuesCounty <- demos %>% filter(demoUnreliable == TRUE) %>% summarise(
  unreliableTracts = n()) %>% mutate(
    unreliablePercentage = paste(as.character(100*unreliableTracts/nrow(demos)), "%"))
dataIssuesCounty
```

## 4.2 Pattern Analysis

**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.

```{r pattern-analysis}
# Group tracts by whether they have high MOE issues
# Calculate average characteristics for each group:
# - population size, demographic percentages

#all tracts high MoE so no need for group by
highMoESummary <- demos %>% summarise(
  avgPop = mean(totalE), avgWhitePerc = mean(whitePerc, na.rm = TRUE),
  avgAAPerc = mean(aaPerc, na.rm = TRUE), avgHispLatPerc = mean(hispPerc, na.rm = TRUE))
  
# Use group_by() and summarize() to create this comparison
# Create a professional table showing the patterns
kable(highMoESummary,
      col.names = c("Average Population", "Average % White Residents", "Average % Black Residents", "Average % Hispanic/Latine Residents"),
      caption = "Characteristics of High Margin of Error Census Tracts in Greene and Philadelphia County, Pennsylvaia",
      format.args = list(big.mark = ","))
```

**Pattern Analysis:** [Describe any patterns you observe. Do certain types of communities have less reliable data? What might explain this?]

Every single tract has a margin of error percentage grater than 15. Perhaps it is because dividing census tracks — which don't have large population totals — into demographic groups leaves a very small number of people to sample to forge the ACS's estimates.

# Part 5: Policy Recommendations

## 5.1 Analysis Integration and Professional Summary

**Your Task:** Write an executive summary that integrates findings from all four analyses.

**Executive Summary Requirements:**
1. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?
2. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?
3. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?
4. **Strategic Recommendations**: What should the Department implement to address these systematic issues?

**Executive Summary:**

[Your integrated 4-paragraph summary here]


Overall, it appears that the ACS estimates are far less reliable for smaller population totals. This becomes especially relevant for smaller geographies or narrower groups, which was exemplified by every census tract in both Philadelphia and Greene counties having unreliable margin of errors at the demographic level.



## 6.3 Specific Recommendations

**Your Task:** Create a decision framework for algorithm implementation.

```{r recommendations-data}
# Create a summary table using your county reliability data
# Include: county name, median income, MOE percentage, reliability category
sumTable <- dataPA %>% select(countyName, medIncomeE, moePercentage, reliability)
# Add a new column with algorithm recommendations using case_when():
# - High Confidence: "Safe for algorithmic decisions"
# - Moderate Confidence: "Use with caution - monitor outcomes"  
# - Low Confidence: "Requires manual review or additional data"
sumTable <- sumTable %>% mutate(algRec = case_when(
  reliability == "High Confidence" ~ "Safe for algorithmic decisions",
  reliability == "Moderate Confidence" ~ "Use with caution - monitor outcomes",
  reliability == "Low Confidence" ~ "Requires manual review or additional data"
))
# Format as a professional table with kable()
kable(sumTable,
      col.names = c("PA County", "Median Income Estimate", "Margin of Error Percentage",
                    "Reliability", "Algorithmic Recommendations"),
      caption = "Algorithmic Recommendations for 5-Year ACS Income Data for Pennsylvania Counties",
      format.args = list(big.mark = ",")
      )
`kable(highMoESummary,
      col.names = c("Average Population", "Average % White Residents",
                    "Average % Black Residents", "Average % Hispanic/Latine Residents"),
      caption = "Characteristics of High Margin of Error Census Tracts in Greene and Philadelphia County, Pennsylvaia",
      format.args = list(big.mark = ","))
```

**Key Recommendations:**

**Your Task:** Use your analysis results to provide specific guidance to the department.

1. **Counties suitable for immediate algorithmic implementation:** [List counties with high confidence data and explain why they're appropriate]

The counties of Philadelphia, Allegheny, Bucks, Montgomery, and Berks are the 5 of the 57 "High Confidence" counties with the lowest margin of error percentage. Their relatively large populations compared to the rest of the counties most likely means that the ACS samples more residents of these counties than they do people of other counties, which would lower the margin of error. 

```{r}
#Full List of high confidence counties
q1 <- sumTable %>% filter(reliability == "High Confidence") %>%
  arrange(moePercentage)
print(q1)
```
2. **Counties requiring additional oversight:** [List counties with moderate confidence data and describe what kind of monitoring would be needed]

Warren, Carbon, and Snyder are the three "moderate confidence counties with the lowest margin of error percentage.To ensure reliability, analysts should consult other data sets and local sources to check against the ACS data.
```{r}
#Full List of moderate confidence counties
q2 <- sumTable %>% filter(reliability == "Moderate Confidence") %>%
  arrange(moePercentage)
print(q2)
```
3. **Counties needing alternative approaches:** [List counties with low confidence data and suggest specific alternatives - manual review, additional surveys, etc.]

There are no "low confidence" counties in Pennsylvania. If there were, I would recommend conducting additional surveys and putting boots in the local community.

## Questions for Further Investigation

[List 2-3 questions that your analysis raised that you'd like to explore further in future assignments. Consider questions about spatial patterns, time trends, or other demographic factors.]

  - With low population totals seemingly linked to higher margins of error, how do analysts create reliable algorithms for smaller subgroups and micro-categories?
  - Besides simply arbitrary deciding, how do we determine what the threshold for "reliability" is?



# Technical Notes

**Data Sources:** 
- U.S. Census Bureau, American Community Survey 2018-2022 5-Year Estimates
- Retrieved via tidycensus R package on [date]

**Reproducibility:** 
- All analysis conducted in R version [your version]
- Census API key required for replication
- Complete code and documentation available at: [your portfolio URL]

**Methodology Notes:**
[Describe any decisions you made about data processing, county selection, or analytical choices that might affect reproducibility]

**Limitations:**
[Note any limitations in your analysis - sample size issues, geographic scope, temporal factors, etc.]

---

## Submission Checklist

Before submitting your portfolio link on Canvas:

- [ ] All code chunks run without errors
- [ ] All "[Fill this in]" prompts have been completed
- [ ] Tables are properly formatted and readable
- [ ] Executive summary addresses all four required components
- [ ] Portfolio navigation includes this assignment
- [ ] Census API key is properly set 
- [ ] Document renders correctly to HTML

**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`
